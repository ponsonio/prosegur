package org.domain.sdm.entity;

// Generated Jul 16, 2014 12:05:59 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;
import org.jboss.seam.ScopeType;
import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.Scope;

/**
 * SdmEmpleado generated by hbm2java
 */
@Entity
@Table(name = "SDM_empleado")
@Name("sdmEmpleado")
@Scope(ScopeType.SESSION)
public class SdmEmpleado implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1266167037553705520L;
	private long id;
	private SdmEmpresa sdmEmpresa;
	private SdmDivicion sdmDivicion;
	private SdmCentroCosto sdmCentroCosto;
	private SdmDelegacion sdmDelegacion;
	private String nombre;
	private String codigo;
	private boolean activo = true;
	private boolean externo = false;
	
	private Set<SdmUsuario> sdmUsuarios = new HashSet<SdmUsuario>(0);
	private Set<SdmInformeViaticos> sdmInformeViaticoses = new HashSet<SdmInformeViaticos>(
			0);
	private Set<SdmLiquidacionInformeViaticos> sdmLiquidacionInformeViaticoses = new HashSet<SdmLiquidacionInformeViaticos>(
			0);
	private Set<SdmInformeViaticoDetalle> sdmInformeViaticoDetalles = new HashSet<SdmInformeViaticoDetalle>(
			0);
	
	public SdmEmpleado() {
	}

	public SdmEmpleado(long id, SdmEmpresa sdmEmpresa, SdmDivicion sdmDivicion,
			SdmCentroCosto sdmCentroCosto, SdmDelegacion sdmDelegacion,
			String nombre, String codigo, boolean activo) {
		this.id = id;
		this.sdmEmpresa = sdmEmpresa;
		this.sdmDivicion = sdmDivicion;
		this.sdmCentroCosto = sdmCentroCosto;
		this.sdmDelegacion = sdmDelegacion;
		this.nombre = nombre;
		this.codigo = codigo;
		this.activo = activo;
	}

	public SdmEmpleado(long id, SdmEmpresa sdmEmpresa, SdmDivicion sdmDivicion,
			SdmCentroCosto sdmCentroCosto, SdmDelegacion sdmDelegacion,
			String nombre, String codigo, boolean activo,
			Set<SdmUsuario> sdmUsuarios,
			Set<SdmInformeViaticos> sdmInformeViaticoses,
			Set<SdmLiquidacionInformeViaticos> sdmLiquidacionInformeViaticoses,
			Set<SdmInformeViaticoDetalle> sdmInformeViaticoDetalles) {
		this.id = id;
		this.sdmEmpresa = sdmEmpresa;
		this.sdmDivicion = sdmDivicion;
		this.sdmCentroCosto = sdmCentroCosto;
		this.sdmDelegacion = sdmDelegacion;
		this.nombre = nombre;
		this.codigo = codigo;
		this.activo = activo;
		this.sdmUsuarios = sdmUsuarios;
		this.sdmInformeViaticoses = sdmInformeViaticoses;
		this.sdmLiquidacionInformeViaticoses = sdmLiquidacionInformeViaticoses;
		this.sdmInformeViaticoDetalles = sdmInformeViaticoDetalles;
	}

	public SdmEmpleado(SdmEmpleado sdmEmpleadoSelect) {
		this.id = sdmEmpleadoSelect.id;
		this.sdmEmpresa = sdmEmpleadoSelect.sdmEmpresa;
		this.sdmDivicion = sdmEmpleadoSelect.sdmDivicion;
		this.sdmCentroCosto = sdmEmpleadoSelect.sdmCentroCosto;
		this.sdmDelegacion = sdmEmpleadoSelect.sdmDelegacion;
		this.nombre = sdmEmpleadoSelect.nombre;
		this.codigo = sdmEmpleadoSelect.codigo;
		this.activo = sdmEmpleadoSelect.activo;
		this.sdmUsuarios = sdmEmpleadoSelect.sdmUsuarios;
		this.sdmInformeViaticoses = sdmEmpleadoSelect.sdmInformeViaticoses;
		this.sdmLiquidacionInformeViaticoses = sdmEmpleadoSelect.sdmLiquidacionInformeViaticoses;
		this.sdmInformeViaticoDetalles = sdmEmpleadoSelect.sdmInformeViaticoDetalles;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "codigo_empresa", nullable = false)
	@NotNull
	public SdmEmpresa getSdmEmpresa() {
		return this.sdmEmpresa;
	}

	public void setSdmEmpresa(SdmEmpresa sdmEmpresa) {
		this.sdmEmpresa = sdmEmpresa;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "codigo_divicion", nullable = false)
	@NotNull
	public SdmDivicion getSdmDivicion() {
		return this.sdmDivicion;
	}

	public void setSdmDivicion(SdmDivicion sdmDivicion) {
		this.sdmDivicion = sdmDivicion;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "codigo_centro_costo", nullable = false)
	@NotNull
	public SdmCentroCosto getSdmCentroCosto() {
		return this.sdmCentroCosto;
	}

	public void setSdmCentroCosto(SdmCentroCosto sdmCentroCosto) {
		this.sdmCentroCosto = sdmCentroCosto;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "codigo_delegacion", nullable = false)
	@NotNull
	public SdmDelegacion getSdmDelegacion() {
		return this.sdmDelegacion;
	}

	public void setSdmDelegacion(SdmDelegacion sdmDelegacion) {
		this.sdmDelegacion = sdmDelegacion;
	}

	@Column(name = "nombre", nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "codigo", nullable = false, length = 7)
	@NotNull
	@Length(max = 7)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Column(name = "activo", nullable = false)
	public boolean isActivo() {
		return this.activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sdmEmpleado")
	public Set<SdmUsuario> getSdmUsuarios() {
		return this.sdmUsuarios;
	}

	public void setSdmUsuarios(Set<SdmUsuario> sdmUsuarios) {
		this.sdmUsuarios = sdmUsuarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sdmEmpleado")
	public Set<SdmInformeViaticos> getSdmInformeViaticoses() {
		return this.sdmInformeViaticoses;
	}

	public void setSdmInformeViaticoses(
			Set<SdmInformeViaticos> sdmInformeViaticoses) {
		this.sdmInformeViaticoses = sdmInformeViaticoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sdmEmpleado")
	public Set<SdmLiquidacionInformeViaticos> getSdmLiquidacionInformeViaticoses() {
		return this.sdmLiquidacionInformeViaticoses;
	}

	public void setSdmLiquidacionInformeViaticoses(
			Set<SdmLiquidacionInformeViaticos> sdmLiquidacionInformeViaticoses) {
		this.sdmLiquidacionInformeViaticoses = sdmLiquidacionInformeViaticoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sdmEmpleado")
	public Set<SdmInformeViaticoDetalle> getSdmInformeViaticoDetalles() {
		return this.sdmInformeViaticoDetalles;
	}

	public void setSdmInformeViaticoDetalles(
			Set<SdmInformeViaticoDetalle> sdmInformeViaticoDetalles) {
		this.sdmInformeViaticoDetalles = sdmInformeViaticoDetalles;
	}

	@Column(name = "externo", nullable = false)
	public boolean isExterno() {
		return externo;
	}

	public void setExterno(boolean externo) {
		this.externo = externo;
	}

	@Override
	public String toString() {
		return "SdmEmpleado [id=" + id + ", sdmEmpresa=" + sdmEmpresa
				+ ", sdmDivicion=" + sdmDivicion + ", sdmCentroCosto="
				+ sdmCentroCosto + ", sdmDelegacion=" + sdmDelegacion
				+ ", nombre=" + nombre + ", codigo=" + codigo + ", activo="
				+ activo + ", externo=" + externo + "]";
	}

	
	
}
